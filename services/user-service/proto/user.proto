syntax = "proto3";

package user;

option go_package = "github.com/storywarz/user-service/proto";

// User service for managing user accounts and authentication
service UserService {
  // Register creates a new user account
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  
  // Login authenticates a user and returns a session token
  rpc Login(LoginRequest) returns (LoginResponse) {}
  
  // GetUser retrieves user details by ID
  rpc GetUser(GetUserRequest) returns (User) {}
  
  // UpdateUser updates user profile information
  rpc UpdateUser(UpdateUserRequest) returns (User) {}
  
  // ChangePassword updates a user's password
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse) {}
  
  // RequestPasswordReset initiates a password reset process
  rpc RequestPasswordReset(RequestPasswordResetRequest) returns (RequestPasswordResetResponse) {}
  
  // CompletePasswordReset completes a password reset process
  rpc CompletePasswordReset(CompletePasswordResetRequest) returns (CompletePasswordResetResponse) {}
}

// User represents a user account
message User {
  string id = 1;
  string username = 2;
  string email = 3;
  string display_name = 4;
  string avatar_url = 5;
  uint64 created_at = 6;
  uint64 updated_at = 7;
}

// RegisterRequest is the request payload for registering a new user
message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string display_name = 4;
}

// RegisterResponse is the response for a registration request
message RegisterResponse {
  User user = 1;
  string session_token = 2;
}

// LoginRequest is the request payload for user authentication
message LoginRequest {
  string username_or_email = 1;
  string password = 2;
}

// LoginResponse is the response for a login request
message LoginResponse {
  User user = 1;
  string session_token = 2;
}

// GetUserRequest is the request payload for retrieving a user by ID
message GetUserRequest {
  string id = 1;
}

// UpdateUserRequest is the request payload for updating a user
message UpdateUserRequest {
  string id = 1;
  string display_name = 2;
  string avatar_url = 3;
  string email = 4;
}

// ChangePasswordRequest is the request payload for changing a password
message ChangePasswordRequest {
  string user_id = 1;
  string current_password = 2;
  string new_password = 3;
}

// ChangePasswordResponse is the response for a password change
message ChangePasswordResponse {
  bool success = 1;
}

// RequestPasswordResetRequest is the request payload for initiating a password reset
message RequestPasswordResetRequest {
  string email = 1;
}

// RequestPasswordResetResponse is the response for a password reset request
message RequestPasswordResetResponse {
  bool success = 1;
}

// CompletePasswordResetRequest is the request payload for completing a password reset
message CompletePasswordResetRequest {
  string reset_token = 1;
  string new_password = 2;
}

// CompletePasswordResetResponse is the response for completing a password reset
message CompletePasswordResetResponse {
  bool success = 1;
} 